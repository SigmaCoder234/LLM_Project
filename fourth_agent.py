#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ß–ê–¢-–ê–ì–ï–ù–¢ ‚Ññ4 - –≠–≤—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –º–æ–¥–µ—Ä–∞—Ç–æ—Ä
"""

import asyncio
import logging
import redis
import json
import re

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

REDIS_HOST = "localhost"
REDIS_PORT = 6379

# –°–ø–∏—Å–æ–∫ –º–∞—Ç–µ—Ä–Ω—ã—Ö —Å–ª–æ–≤ –¥–ª—è —ç–≤—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
BANNED_WORDS = ['–º–∞—Ç', '—Å–ø–∞–º', '—Ä–µ–∫–ª–∞–º–∞']

class Agent4:
    def __init__(self):
        try:
            self.redis_client = redis.Redis(host=REDIS_HOST, port=REDIS_PORT, decode_responses=True)
            self.redis_client.ping()
            logger.info("üöÄ –ê–≥–µ–Ω—Ç ‚Ññ4 –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ Redis: {e}")
            self.redis_client = None
    
    def run(self):
        logger.info("‚úÖ –ê–≥–µ–Ω—Ç ‚Ññ4 –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –æ—á–µ—Ä–µ–¥—å")
        asyncio.run(self.listen())
    
    async def check_heuristic(self, text):
        """–≠–≤—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑"""
        text_lower = text.lower()
        for word in BANNED_WORDS:
            if word in text_lower:
                return True
        return False
    
    async def listen(self):
        try:
            while True:
                if self.redis_client:
                    try:
                        msg = self.redis_client.blpop("queue:agent4_input", timeout=1)
                        if msg:
                            data = json.loads(msg[1])
                            is_violation = await self.check_heuristic(data.get('text', ''))
                            logger.info(f"üì® –ê–Ω–∞–ª–∏–∑: {'‚ö†Ô∏è –Ω–∞—Ä—É—à–µ–Ω–∏–µ' if is_violation else '‚úÖ —á–∏—Å—Ç–æ–µ'}")
                    except:
                        pass
                await asyncio.sleep(1)
        except KeyboardInterrupt:
            logger.info("‚ùå –ê–≥–µ–Ω—Ç ‚Ññ4 –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

if __name__ == "__main__":
    agent = Agent4()
    agent.run()
